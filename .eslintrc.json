{
    "env": {
        "es2020": true,
        "node": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:promise/recommended",
        "plugin:import/errors",
        "plugin:import/warnings",
        "plugin:import/typescript",
        "plugin:eslint-comments/recommended"
    ],
    "parser": "@babel/eslint-parser",
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": 2020,
        "sourceType": "module"
    },
    "plugins": [
        "react",
        "promise",
        "import",
        "eslint-comments"
    ],
    "settings": {
        "react": {
            "version": "detect"
        }
    },
    "rules": {
        "react/prop-types": ["error"],

        "array-callback-return": ["error"],
        "block-spacing": ["error"],
        "brace-style": ["error", "1tbs", { "allowSingleLine": true }],
        "comma-dangle": ["error", "never"],
        "comma-spacing": ["error"],
        "eol-last": ["error"],
        "indent": ["error", "tab", { "SwitchCase": 1 }],
        "keyword-spacing": ["error"],
        "max-statements-per-line": ["error"],
        "no-floating-decimal": ["error"],
        "no-multi-spaces": ["error"],
        "no-multiple-empty-lines": ["error", { "max": 1 }],
        "no-trailing-spaces": ["error"],
        "no-var": ["error"],
        "one-var": ["error", "never"],
        "padded-blocks": ["error", "never"],
        "prefer-const": ["error", { "destructuring": "all" }],
        "quotes": ["error", "single", { "avoidEscape": true, "allowTemplateLiterals": false }],
        "semi": ["error"],
        "space-before-blocks": ["error"],
        "space-infix-ops": ["error"],
        "yoda": ["error"]
    },
    "overrides": [
        {
            "files": [ "./**/*.js" ],
            "globals": {
                "Atomics": "readonly",
                "SharedArrayBuffer": "readonly"
            }
        },
        {
            "files": [ "./assets/**/*.staticjs" ],
            "globals": {
                "postExpoEvent": "readonly"
            },
            "env": {
                "node": false,
                "browser": true
            }
        }
    ]
}
